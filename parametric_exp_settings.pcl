#Pre-defined interval sequence order of the regular block 
array <int> order_1intervals[] = {1};
array <int> order_2intervals[] = {1,2};
array <int> order_4intervals[] = {2,1,3,4};
array <int> order_16intervals[] = {2, 10, 12, 5, 8, 3, 14, 4, 16, 13, 1, 6, 9, 15, 11, 7};

int setting_interval_in_block = 512; # all block will have 512 intervals regardless of conditions
int setting_deviant_in_block = 64; 
int setting_deviant_min_trial_apart = 3; # the minimum number of standard in between 2 deviants (2 deviants are not included in the number)
int setting_maximum_same_pattern = 3; # the maximum allowed number of the same sequence pattern in a row

# the response window. The setting is not very important because all the responses will be recorded anyway
# we can always change how we match the response to trials during the R analysis
# the current setting only affect how Presentation code the event as "hit" / "miss"
int setting_response_window_start = 0;
int setting_response_window_end = 1000;



####################### DO NOT CHANGE BELOW ##########################

############################################
#       Counterbalancing                   #
############################################


# deviant cond (1: rotation as deviant, 2: rotation as standard)
# regular cond (1: regular, 2: irregular)
# interval cond (1, 2, 4, 16)

##################################################
# Order of deviant conditions
# Order 1: rotation as deviant, rotation as standard
# Order 2: rotation as standard, rotation as deviant
array <int> setting_deviant_order[][] = {{1,2}, {2,1}};

#################################################
# Order of regularity conditions
# Order 1: Regular, Irregular
# Order 2: Irregular, Regular
array <int> setting_regular_order[][] = {{1,2}, {2,1}};


#################################################
# Order of interval conditions within regular / irregular supra-block
# Order 1: 1,2,16,4
# Order 2: 2,4,1,16
# Order 3: 4,16,2,1
# Order 4: 16,1,4,2
array <int> setting_interval_order[][] = {
        {1,2,16,4},
        {2,4,1,16},
        {4,16,2,1},
        {16,1,4,2}
};


#################################################
# The array that stores the counterbalance table (written in ods file)
array <string> cbtable_sex[] = {"F","F","F","F","F","F","F","F","F","F","F","F","F","F","F","F","M","M","M","M","M","M","M","M","M","M","M","M","M","M","M","M"};
array <int> cbtable_deviant_order[] = {1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2};
array <int> cbtable_regular_order[] = {1,1,1,1,2,2,2,2,1,1,1,1,2,2,2,2,1,1,1,1,2,2,2,2,1,1,1,1,2,2,2,2};
array <int> cbtable_interval_order[] = {1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4};


